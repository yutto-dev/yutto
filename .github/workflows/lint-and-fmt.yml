name: Lint and Format

on:
  push:
    branches: [main]
  pull_request:
  merge_group:
  workflow_dispatch:

jobs:
  lint-and-fmt-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
        architecture: ["x64"]
    name: Lint and Format (Python)
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: Install just
        uses: extractions/setup-just@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: |
          just ci-install

      - name: lint
        run: |
          just ci-lint

      - name: format check
        run: |
          just ci-fmt-check

  lint-and-fmt-rust:
    name: Lint and Format (Rust)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy, rustfmt
      - uses: actions/cache@v4
        id: cargo-cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Format with rustfmt
        working-directory: packages/biliass/rust
        run: |
          cargo fmt --all -- --check
      - name: Lint with clippy
        working-directory: packages/biliass/rust
        run: |
          cargo clippy --all-targets --all-features -- -D warnings

  lint-and-fmt-docs:
    name: Lint and Format (Docs)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          package_json_file: "docs/package.json"
          version: "latest"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"
          cache-dependency-path: "docs/pnpm-lock.yaml"

      - name: Install dependencies
        working-directory: ./docs
        run: pnpm i --frozen-lockfile

      - name: Format check
        working-directory: ./docs
        run: pnpm fmt:check
