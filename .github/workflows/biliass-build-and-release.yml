name: Build and Release (biliass)

on:
  push:
    tags:
      - "biliass*" # Push events to matching biliass*, i.e. biliass@1.0.0
    branches:
      - main
    paths:
      - "packages/biliass/**"
      - ".github/**"
  pull_request:
    paths:
      - "packages/biliass/**"
      - ".github/**"
  merge_group:
    paths:
      - "packages/biliass/**"
      - ".github/**"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
          - runner: ubuntu-latest
            target: s390x
          - runner: ubuntu-latest
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --interpreter '3.13 3.13t'
          sccache: "true"
          manylinux: auto
          working-directory: packages/biliass
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: packages/biliass/dist

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --interpreter '3.13 3.13t'
          sccache: "true"
          manylinux: musllinux_1_2
          working-directory: packages/biliass
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: packages/biliass/dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: "true"
          working-directory: packages/biliass
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: packages/biliass/dist

  # Python 3.13 standard and free-threaded versions cannot be
  # available at the same time on Windows machines, so we
  # split it into two jobs.
  # https://github.com/Quansight-Labs/setup-python/issues/5
  windows-free-threaded:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: Quansight-Labs/setup-python@v5
        with:
          python-version: 3.13t
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: "true"
          working-directory: packages/biliass
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-free-threaded-${{ matrix.platform.target }}
          path: packages/biliass/dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --interpreter '3.13 3.13t'
          sccache: "true"
          working-directory: packages/biliass
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: packages/biliass/dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          working-directory: packages/biliass
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: packages/biliass/dist

  publish-pypi:
    runs-on: ubuntu-latest
    name: Publish to PyPI
    if: "startsWith(github.ref, 'refs/tags/')"
    needs:
      - linux
      - musllinux
      - windows
      - windows-free-threaded
      - macos
      - sdist
    permissions:
      id-token: write

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist/

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Publish release distributions to PyPI
        run: uv publish -v

  publish-release:
    runs-on: ubuntu-latest
    name: Publish to GitHub
    if: "startsWith(github.ref, 'refs/tags/')"
    needs:
      - linux
      - musllinux
      - windows
      - windows-free-threaded
      - macos
      - sdist
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist/
      - name: Get tag name
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Publish to GitHub
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: dist/*
          tag_name: ${{ env.RELEASE_VERSION }}
